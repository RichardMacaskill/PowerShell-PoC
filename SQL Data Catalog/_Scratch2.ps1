# Get json of all columns for a named database and instance

$ServerRootUrl = 'http://rm-win10-sql201.testnet.red-gate.com:15156'
$InstanceName  = 'rm-iclone1.testnet.red-gate.com' #Read-Host -Prompt 'Please enter the SQL instance for the database to classify.'
$DatabaseName = 'AdventureWorks2012' # Read-Host =-Prompt 'Please enter the database name.'

# Change this to a value generated by your SQL Data Catalog under the 'Auth tokens' tab
$AuthToken = 'NTE3NjA0OTQ0NjE0Nzg1MDI0Ojc5NzViY2YwLTAyOGUtNGU4My1hZjY4LTJkNWE0ZmI4MmNlMw==12134233231'

$Headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
$Headers.Add("Authorization", "Bearer $AuthToken")

# First, get the list of instances so we can match on name and get the internal InstanceId
$cmd = $ServerRootUrl     + "/api/instances"
$Instances = Invoke-RestMethod -Uri $cmd -Headers $Headers -AllowUnencryptedAuthentication

$Instance = $Instances | Where-Object -FilterScript {$_.instance.name -eq $InstanceName}
$InstanceId = $Instance.instance.id

# Second, use InstanceId and DatabaseName to get the list of columns and their metadata
$AddUrl = "$ServerRootUrl/api/instances/$InstanceId/databases/" + $DatabaseName + "/columns?Value=1&skip=0&take=200"

$Response = Invoke-RestMethod -Uri $AddUrl `
   -UseDefaultCredentials `
   -Method Get `
   -AllowUnencryptedAuthentication `
   -ContentType 'application/json'

$Response | ConvertTo-Json